, case when game_place = 'H' then b.home else b.away end as odds
, c.rank
, c.points
from
(with teams as
(select distinct teams_home_id as team_id, league_id from `bi-playground-269209.soccer_test.game_schedule`
union all
select distinct teams_away_id as team_id, league_id from `bi-playground-269209.soccer_test.game_schedule`)
select *
, lag(fixture_date) OVER (PARTITION BY team_id ORDER BY team_id, fixture_date ASC) AS prev_fixture_date
, lag(score_fulltime_team) OVER (PARTITION BY team_id ORDER BY team_id, fixture_date ASC) AS prev_game_scored_g
, lag(score_fulltime_opponent) OVER (PARTITION BY team_id ORDER BY team_id, fixture_date ASC) AS prev_game_lost_g
, ROW_NUMBER() OVER(PARTITION BY team_id ORDER BY team_id, fixture_date desc) -1 AS games_order
, ROW_NUMBER() OVER(PARTITION BY team_id ORDER BY team_id, fixture_date) -1 AS games_order_rev
from
(select a.fixture_id
, fixture_date
, score_fulltime_home as score_fulltime_team
, score_fulltime_away as score_fulltime_opponent
, score_halftime_home as score_halftime_team
, score_halftime_away as score_halftime_opponent
#, score_extratime_home
#, score_extratime_away
#, score_penalty_home
#, score_penalty_away
, fixture_status_elapsed
, fixture_status_short
#, teams_home_winner
#, teams_away_winner
, teams_home_id as team_id
, teams_home_name as team_name
, teams_away_id as opponent_id
, teams_away_name as opponent_name
, a.league_id
, league_country
, league_name
, league_round
, coach_id
, coach_name
, case when score_fulltime_home > score_fulltime_away then 'W' when score_fulltime_home < score_fulltime_away then 'L' else 'D' end as FT_result
, case when score_halftime_home > score_halftime_away then 'W' when score_halftime_home < score_halftime_away then 'L' else 'D' end as HT_result
#, lag(fixture_date) OVER (PARTITION BY team_id ORDER BY team_id, fixture_date ASC) AS prev_fixture_date
, ROW_NUMBER() OVER(PARTITION BY b.team_id ORDER BY b.team_id, fixture_date desc) AS games_order_per_site
, 'H' as game_place
, league_level
, is_man
, is_senior
from `bi-playground-269209.soccer_test.game_schedule_daily` a
inner join teams b
on a.teams_home_id = b.team_id
left join `bi-playground-269209.soccer_test.coaches` c
on a.teams_home_id = c.team_id and a.fixture_id = c.fixture_id
left join `bi-playground-269209.soccer_test.league_lvl` d
on a.league_id = d.league_id
where date(cast(fixture_date as datetime)) >= current_date() -60 and fixture_status_short in ('FT','AET','PEN') and a.league_id not in (10, 667, 666)
union all
select a.fixture_id
, fixture_date
, score_fulltime_away as score_fulltime_team
, score_fulltime_home as score_fulltime_opponent
, score_halftime_away as score_halftime_team
, score_halftime_home as score_halftime_opponent
#, score_extratime_home
#, score_extratime_away
#, score_penalty_home
#, score_penalty_away
, fixture_status_elapsed
, fixture_status_short
#, teams_home_winner
#, teams_away_winner
, teams_away_id as team_id
, teams_away_name as team_name
, teams_home_id as opponent_id
, teams_home_name as opponent_name
, a.league_id
, league_country
, league_name
, league_round
, coach_id
, coach_name
, case when score_fulltime_home < score_fulltime_away then 'W' when score_fulltime_home > score_fulltime_away then 'L' else 'D' end as FT_result
, case when score_halftime_home < score_halftime_away then 'W' when score_halftime_home > score_halftime_away then 'L' else 'D' end as HT_result
#, lag(fixture_date) OVER (PARTITION BY team_id ORDER BY team_id, fixture_date ASC) AS prev_fixture_date
, ROW_NUMBER() OVER(PARTITION BY b.team_id ORDER BY b.team_id, fixture_date desc) AS games_order_site
, 'A' as game_place
, league_level
, is_man
, is_senior
from `bi-playground-269209.soccer_test.game_schedule_daily` a
inner join teams b
on a.teams_away_id = b.team_id
left join `bi-playground-269209.soccer_test.coaches` c
on a.teams_away_id = c.team_id and a.fixture_id = c.fixture_id
left join `bi-playground-269209.soccer_test.league_lvl` d
on a.league_id = d.league_id
where date(cast(fixture_date as datetime)) >= current_date() -60 and fixture_status_short in ('FT','AET','PEN') and a.league_id not in (10, 667, 666)
union all
select a.fixture_id
, fixture_date
, cast(score_fulltime_home as INT64) as score_fulltime_team
, cast(score_fulltime_away as INT64) as score_fulltime_opponent
, cast(score_halftime_home as INT64) as score_halftime_team
, cast(score_halftime_away as INT64) as score_halftime_opponent
#, score_extratime_home
#, score_extratime_away
#, score_penalty_home
#, score_penalty_away
, fixture_status_elapsed
, fixture_status_short
#, teams_home_winner
#, teams_away_winner
, teams_home_id as team_id
, teams_home_name as team_name
, teams_away_id as opponent_id
, teams_away_name as opponent_name
, a.league_id
, league_country
, league_name
, league_round
, coach_id
, coach_name
, null as FT_result
, null as HT_result
#, lag(fixture_date) OVER (PARTITION BY team_id ORDER BY team_id, fixture_date ASC) AS prev_fixture_date
, null AS games_order_per_site
, 'H' as game_place
, league_level
, is_man
, is_senior
from `bi-playground-269209.soccer_test.game_schedule` a
inner join teams b
on a.teams_home_id = b.team_id
left join `bi-playground-269209.soccer_test.coaches` c
on a.teams_home_id = c.team_id and a.fixture_id = c.fixture_id
left join `bi-playground-269209.soccer_test.league_lvl` d
on a.league_id = d.league_id
where a.league_id not in (10, 667, 666)
union all
select a.fixture_id
, fixture_date
, cast(score_fulltime_away as INT64) as score_fulltime_team
, cast(score_fulltime_home as INT64) as score_fulltime_opponent
, cast(score_halftime_away as INT64) as score_halftime_team
, cast(score_halftime_home as INT64) as score_halftime_opponent
#, score_extratime_home
#, score_extratime_away
#, score_penalty_home
#, score_penalty_away
, fixture_status_elapsed
, fixture_status_short
#, teams_home_winner
#, teams_away_winner
, teams_away_id as team_id
, teams_away_name as team_name
, teams_home_id as opponent_id
, teams_home_name as opponent_name
, a.league_id
, league_country
, league_name
, league_round
, coach_id
, coach_name
, null as FT_result
, null as HT_result
#, lag(fixture_date) OVER (PARTITION BY team_id ORDER BY team_id, fixture_date ASC) AS prev_fixture_date
, null as games_order_site
, 'A' as game_place
, league_level
, is_man
, is_senior
from `bi-playground-269209.soccer_test.game_schedule` a
inner join teams b
on a.teams_away_id = b.team_id
left join `bi-playground-269209.soccer_test.coaches` c
on a.teams_away_id = c.team_id and a.fixture_id = c.fixture_id
left join `bi-playground-269209.soccer_test.league_lvl` d
on a.league_id = d.league_id
where a.league_id not in (10, 667, 666)
))a
left join `bi-playground-269209.soccer_test.odds_table` b
on a.fixture_id = b.fixture_id
left join `bi-playground-269209.soccer_test.league_table` c
on a.league_id = c.league_id and a.team_id = c.team_id
where a.league_id not in (10, 667, 666)
order by team_id, fixture_date")
matches_df <- bq_table_download(bq_project_query(projectid,sql))
#temp remove cases with multiple duplicated rows
matches_df <- matches_df %>% filter(games_order <= 10)
matches_df <- matches_df %>%
dplyr::group_by(team_id) %>%
#dplyr::mutate(res_lag1=lag(FT_result,n=1), res_lag2=lag(FT_result,n=2), res_lag3=lag(FT_result,n=3)) %>%
dplyr::mutate(res_streak=paste0(lag(FT_result,n=1),lag(FT_result,n=2),lag(FT_result,n=3))) %>%
dplyr::mutate(pts=if_else(FT_result=="W",3,if_else(FT_result=="D",1,0))) %>%
dplyr::mutate(sum_pts=(lag(pts,n=1)+lag(pts,n=2)+lag(pts,n=3)))
#filter(games_order_rev!=0 & games_order_rev !=1 & games_order_rev !=2)
test <- matches_df %>% filter(games_order==0 & !is.na(odds) & fixture_status_short %in% c('NS','1H','2H', 'HT','FT') & fixture_date >= '2023-04-01 00:00:00') %>%
select(-coach_id,-coach_name,FT_result,-HT_result,-prev_fixture_date,-games_order_rev,-games_order,-pts,-fixture_status_elapsed,-games_order_per_site,-league_round)
testH <- test %>% filter(game_place=="H") %>% select(team_idH=team_id,fixture_id,fixture_date,team_name,opponent_name,league_country,league_name,score_fulltime_team,score_fulltime_opponent,league_level,oddsH=odds,res_streakH=res_streak,sum_ptsH=sum_pts)
testA <- test %>% filter(game_place=="A") %>% select(team_idA=team_id,fixture_id,oddsA=odds,res_streakA=res_streak,sum_ptsA=sum_pts)
rsr3z <- rsr3b %>% filter(h_FT_result=="L") %>% select(h_sum_pts,pts_diff,loss_ratio=ratio)
testF <- left_join(testH,testA,by=c("fixture_id"="fixture_id")) %>% mutate(pts_diff=sum_ptsH-sum_ptsA, FT=paste0(score_fulltime_team,"-",score_fulltime_opponent)) %>%
left_join(rsr3z,by=c("sum_ptsH"="h_sum_pts","pts_diff"="pts_diff")) %>%
mutate(calc_ratio_1x=(as.numeric(1)-loss_ratio),odds_prob_1x=1-(1/oddsA)) %>% mutate(calc_odds_1x=(1/calc_ratio_1x),prob_diff=(calc_ratio_1x-odds_prob_1x)) %>%
select(-team_idA,-team_idH,-score_fulltime_team,-score_fulltime_opponent)
library(httr)
#library(jsonlite)
library(purrr)
library(tibble)
library(dplyr)
library(tidyr)
library(bigrquery)
library(DBI)
library(data.table)
library(tidyverse)
library(lubridate)
library(rtweet)
library(ggplot2)
projectid <- "bi-playground-269209"
bq_auth(path= "/opt/syek/key.json")
sql <- ("select a.fixture_date
, a.fixture_id
, a.cet_curr_time
, a.status_short
, a.who_fav
, a.home
, a.draw
, a.away
, a.goals_home
, a.goals_away
, a.league_name
, a.league_country
, continent
, sub_region
, c.league_type
, a.home_team
, a.away_team
, a.status_elapsed
, league_level
, is_man
, is_senior
, score_fulltime_home
, score_fulltime_away
, score_halftime_home
, score_halftime_away
, score_halftime_home + score_halftime_away as total_goals_ht
, score_fulltime_home + score_fulltime_away as total_goals_ft
, case when score_fulltime_home > score_fulltime_away then 'H' when score_fulltime_home < score_fulltime_away then 'A' else 'D' end as who_won
, case when score_fulltime_home != 0 and score_fulltime_away != 0 then 'Y' else 'N' end as bts
from
(select *, ROW_NUMBER() OVER(PARTITION BY fixture_id ORDER BY fixture_id, cet_curr_time) AS first_upd
from `bi-playground-269209.soccer_test.message_events`
qualify first_upd = 1) a
inner join `bi-playground-269209.soccer_test.game_schedule_daily` b
on a.fixture_id = b.fixture_id
left join (select distinct league_id, league_type, country_code from `bi-playground-269209.soccer_test.details_leagues`) c
on a.league_id = c.league_id
left join `bi-playground-269209.soccer_test.league_lvl` h
on a.league_id = h.league_id
left join `bi-playground-269209.soccer_test.country_to_continent` i
on c.country_code = i.code_2
where a.goals_home + a.goals_away = 1
#and (a.goals_home + a.goals_away) = (score_fulltime_home + score_fulltime_away)
and status_short in ('1H','HT','2H')
and date(a.fixture_date) >= current_date()-1")
results_df <- bq_table_download(bq_project_query(projectid,sql))
results_df <- results_df %>% mutate(fav_stat=if_else(who_fav == who_won,"Y",if_else(who_won=="D",who_won,"N"))) %>% filter(!is.na(total_goals_ft) & total_goals_ft > 0)
results_df <- results_df %>% mutate(over1_5=if_else(total_goals_ft>1,"Y","N"),
under1_5=if_else(total_goals_ft==1,"Y","N"),
over2_5=if_else(total_goals_ft>2,"Y","N"),
bts=if_else(bts=="Y","Y","N")
)
#set twitter message
tgp <- length(unique(results_df$fixture_id))
under1_5 <- length(results_df$total_goals_ft[results_df$total_goals_ft==1])
over1_5 <- length(results_df$total_goals_ft[results_df$total_goals_ft>1])
over2_5 <- length(results_df$total_goals_ft[results_df$total_goals_ft>2])
fav_won <- length(results_df$fav_stat[results_df$fav_stat=="Y"])
fav_lost <- length(results_df$fav_stat[results_df$fav_stat=="N"])
fav_draw <- length(results_df$fav_stat[results_df$fav_stat=="D"])
bts <- length(results_df$bts[results_df$bts=="Y"])
text <- paste0("Summary from ",Sys.Date()-1, ", total games picked: ", tgp,
", games under 1.5: ",under1_5, ", games over 1.5: ", over1_5,
", games over 2.5: ", over2_5, ", favourite team wins: ", fav_won,
", underdog wins: ", fav_lost, ", draws: ", fav_draw, ", both teams scored: ", bts,
" #gamblingTwitter #inplay")
test <- results_df %>% mutate(result_class=if_else(total_goals_ft == 1,"A",if_else(total_goals_ft == 2,"B",if_else(total_goals_ft >= 2,"C", "D")))) %>%
group_by(league_level, continent, status_short, who_fav, result_class) %>%
dplyr::summarise(cnt = n()) %>%
ungroup() %>%
spread(result_class,cnt) %>%
mutate(all_games=(replace_na(A,0)+replace_na(B,0)+replace_na(C,0))) %>%
mutate(prc_1_5=(replace_na(B,0)+replace_na(C,0))/all_games) %>%
mutate(prc_2_5=(replace_na(C,0))/all_games)
daily_stats <- results_df %>% mutate(status2=ifelse(status_short=='2H',"2_half","1_half")) %>%
mutate(date=as.Date(floor_date(fixture_date,unit="month"))) %>%
mutate(under1_5=ifelse(total_goals_ft==1,"Y","N")) %>%
mutate(over1_5=ifelse(total_goals_ft>1,"Y","N")) %>%
mutate(over2_5=ifelse(total_goals_ft>2,"Y","N")) %>%
group_by(date,status2,over1_5) %>%
dplyr::summarise(under1_5_cnt=n())
#daily_stats$newdate <- strptime(as.character(daily_stats$date), "%Y-%m-%d")
d <- ggplot(daily_stats, aes(fill=over1_5, x=date, y=under1_5_cnt)) +
geom_col(position="stack") + scale_x_date(date_breaks = "1 month") +
theme(axis.text.x=element_text(angle = -90, hjust = 0), axis.title.y = element_blank()) +
labs(x = "month",y = "over / under 1.5 goals") +
#geom_text(aes(label=under1_5_cnt),vjust = -0.2) +
facet_wrap(~status2)
d
ggplot(results_df , aes(fill=over1_5, x=over1_5)) + geom_bar(position="stack") + geom_text(aes(label=over1_5))
e <- ggplot(results_df, aes(x=under1_5_cnt)) +
geom_col(position="stack") + scale_x_date(date_breaks = "1 month") +
# theme(axis.text.x=element_text(angle = -90, hjust = 0), axis.title.y = element_blank()) +
# labs(x = "month",y = "over / under 1.5 goals") +
#geom_text(aes(label=under1_5_cnt),vjust = -0.2) +
facet_wrap(~status2)
e
library(plyr)
success_by_min1 <- results_df %>% mutate(min_round=round_any(status_elapsed, 5, f = ceiling)) %>% group_by(who_fav,min_round,total_goals_ft) %>% dplyr::summarise(by_goals=n())
success_by_min2 <- results_df %>% mutate(min_round=round_any(status_elapsed, 5, f = ceiling)) %>% group_by(who_fav,min_round) %>% dplyr::summarise(by_min=n())
success_by_min <- left_join(success_by_min1,success_by_min2,by=c("who_fav"="who_fav", "min_round"="min_round")) %>% mutate(ratio=by_goals/by_min) %>% filter(total_goals_ft==1)
#success_by_min3 <- success_by_min %>% mutate(min_round=round_any(status_elapsed, 5, f = ceiling))
ggplot(success_by_min , aes(x=min_round, y=by_min)) + geom_bar(position="dodge", stat="identity")
text
library(rtweet)
library(dplyr)
library(bigrquery)
library(DBI)
library(tidyr)
library(purrr)
## get followers
#auth_setup_default()
appname <- "post_app2021"
consumer_key <- "IKBoSS3NLcGPqwlxfEa13zOI8"
consumer_secret <- "2MSBTWpp1vIZRVU0giJcQAEyHxrHmseWkHgNRiGuo67N6gxvIz"
access_token <- "1359905978704134144-U5b7jvt6MS1F9ui939Y7yolrLRy6Rm"
access_secret <- "OyW9xwtb1kUG6b4vsjEur7KtJpvsAkCdnaJGdVLGuBVxc"
twitter_token <- create_token(
app = appname,
consumer_key,
consumer_secret,
access_token,
access_secret)
followers <- rtweet::get_followers(user = 'investgambling1', parse = TRUE)
users <- lookup_users(followers$user_id)
users <- users %>% select(user_id,screen_name,source,lang)
users$user_id <- as.character(users$user_id)
users$cet_curr_time <- format(Sys.Date(),tz="Europe/Rome")
#followers <- rtweet::get_followers(user = 'investgambling1', parse = FALSE)
#print(str(followers))
# followers1 <- followers[[1]][["ids"]]
#
# users1 <- rtweet::lookup_users(followers1, parse = FALSE)
#
# users2 <- tibble(users1[[1]]) %>% select(-entities,-status,-withheld_in_countries)
#
# users3 <- users2 %>% unnest(cols = c(value))
#
# print(head(users1))
#users1 <- users1 %>% dplyr::select(id,id_str,name,screen_name,source,lang)
# users1$user_id <- base::as.character(users1$user_id)
#
# users1$cet_curr_time <- base::format(Sys.Date(),tz="Europe/Rome")
## check with saved info
projectid <- "bi-playground-269209"
bq_auth(path= "/opt/syek/key.json")
sql <- ("select cast(user_id as string) as user_id, screen_name, status, cast(follow_date as string) as follow_date, lang, source from `bi-playground-269209.soccer_test.followers`")
followers_df <- bq_table_download(bq_project_query(projectid,sql))
# compare both
comp <- full_join(users,followers_df,by=c("user_id"="user_id"))
comp <- comp %>% mutate(status=if_else(is.na(screen_name.y),"New",if_else(is.na(screen_name.x),"Lost","Current")))
new <- comp %>% filter(status=="New") %>% select(user_id,screen_name=screen_name.x,source=source.x,lang=lang.x,follow_date=cet_curr_time,status)
current <- comp %>% filter(status=="Current") %>% select(user_id,screen_name=screen_name.x,source=source.x,lang=lang.x,follow_date,status)
lost <- comp %>% filter(status=="Lost") %>% select(user_id,screen_name=screen_name.y,source=source.y,lang=lang.y,follow_date,status)
all_followers <- bind_rows(new,current,lost)
View(all_followers)
bigrquery::bq_auth(path= "/opt/syek/key.json")
billing = "1108793-EMEA-Bee-Fee Limited"
project = "bi-playground-269209"
data_set = "soccer_test"
con = dbConnect(
bigrquery::bigquery(),
project = project,
dataset = data_set,
billing = billing
)
dbWriteTable(con, "followers", all_followers, overwrite=TRUE)
library(rtweet)
library(dplyr)
library(bigrquery)
library(DBI)
library(tidyr)
library(purrr)
## get followers
#auth_setup_default()
appname <- "post_app2021"
consumer_key <- "IKBoSS3NLcGPqwlxfEa13zOI8"
consumer_secret <- "2MSBTWpp1vIZRVU0giJcQAEyHxrHmseWkHgNRiGuo67N6gxvIz"
access_token <- "1359905978704134144-U5b7jvt6MS1F9ui939Y7yolrLRy6Rm"
access_secret <- "OyW9xwtb1kUG6b4vsjEur7KtJpvsAkCdnaJGdVLGuBVxc"
twitter_token <- create_token(
app = appname,
consumer_key,
consumer_secret,
access_token,
access_secret)
followers <- rtweet::get_followers(user = 'investgambling1', parse = TRUE)
users <- lookup_users(followers$user_id)
users <- users %>% select(user_id,screen_name,source,lang)
users$user_id <- as.character(users$user_id)
users$cet_curr_time <- format(Sys.Date(),tz="Europe/Rome")
#followers <- rtweet::get_followers(user = 'investgambling1', parse = FALSE)
#print(str(followers))
# followers1 <- followers[[1]][["ids"]]
#
# users1 <- rtweet::lookup_users(followers1, parse = FALSE)
#
# users2 <- tibble(users1[[1]]) %>% select(-entities,-status,-withheld_in_countries)
#
# users3 <- users2 %>% unnest(cols = c(value))
#
# print(head(users1))
#users1 <- users1 %>% dplyr::select(id,id_str,name,screen_name,source,lang)
# users1$user_id <- base::as.character(users1$user_id)
#
# users1$cet_curr_time <- base::format(Sys.Date(),tz="Europe/Rome")
## check with saved info
projectid <- "bi-playground-269209"
bq_auth(path= "/opt/syek/key.json")
sql <- ("select cast(user_id as string) as user_id, screen_name, status, cast(follow_date as string) as follow_date, lang, source from `bi-playground-269209.soccer_test.followers`")
followers_df <- bq_table_download(bq_project_query(projectid,sql))
# compare both
comp <- full_join(users,followers_df,by=c("user_id"="user_id"))
comp <- comp %>% mutate(status=if_else(is.na(screen_name.y),"New",if_else(is.na(screen_name.x),"Lost","Current")))
new <- comp %>% filter(status=="New") %>% select(user_id,screen_name=screen_name.x,source=source.x,lang=lang.x,follow_date=cet_curr_time,status)
current <- comp %>% filter(status=="Current") %>% select(user_id,screen_name=screen_name.x,source=source.x,lang=lang.x,follow_date,status)
lost <- comp %>% filter(status=="Lost") %>% select(user_id,screen_name=screen_name.y,source=source.y,lang=lang.y,follow_date,status)
all_followers <- bind_rows(new,current,lost)
View(all_followers)
bigrquery::bq_auth(path= "/opt/syek/key.json")
billing = "1108793-EMEA-Bee-Fee Limited"
project = "bi-playground-269209"
data_set = "soccer_test"
con = dbConnect(
bigrquery::bigquery(),
project = project,
dataset = data_set,
billing = billing
)
dbWriteTable(con, "followers", all_followers, overwrite=TRUE)
source("~/Kuba/soccer/curl_examples.R")
library(rtweet)
library(dplyr)
library(bigrquery)
library(DBI)
library(tidyr)
library(purrr)
## get followers
#auth_setup_default()
appname <- "post_app2021"
consumer_key <- "IKBoSS3NLcGPqwlxfEa13zOI8"
consumer_secret <- "2MSBTWpp1vIZRVU0giJcQAEyHxrHmseWkHgNRiGuo67N6gxvIz"
access_token <- "1359905978704134144-U5b7jvt6MS1F9ui939Y7yolrLRy6Rm"
access_secret <- "OyW9xwtb1kUG6b4vsjEur7KtJpvsAkCdnaJGdVLGuBVxc"
twitter_token <- create_token(
app = appname,
consumer_key,
consumer_secret,
access_token,
access_secret)
followers <- rtweet::get_followers(user = 'investgambling1', parse = TRUE)
users <- lookup_users(followers$user_id)
users <- users %>% select(user_id,screen_name,source,lang)
users$user_id <- as.character(users$user_id)
users$cet_curr_time <- format(Sys.Date(),tz="Europe/Rome")
#followers <- rtweet::get_followers(user = 'investgambling1', parse = FALSE)
#print(str(followers))
# followers1 <- followers[[1]][["ids"]]
#
# users1 <- rtweet::lookup_users(followers1, parse = FALSE)
#
# users2 <- tibble(users1[[1]]) %>% select(-entities,-status,-withheld_in_countries)
#
# users3 <- users2 %>% unnest(cols = c(value))
#
# print(head(users1))
#users1 <- users1 %>% dplyr::select(id,id_str,name,screen_name,source,lang)
# users1$user_id <- base::as.character(users1$user_id)
#
# users1$cet_curr_time <- base::format(Sys.Date(),tz="Europe/Rome")
## check with saved info
projectid <- "bi-playground-269209"
bq_auth(path= "/opt/syek/key.json")
sql <- ("select cast(user_id as string) as user_id, screen_name, status, cast(follow_date as string) as follow_date, lang, source from `bi-playground-269209.soccer_test.followers`")
followers_df <- bq_table_download(bq_project_query(projectid,sql))
# compare both
comp <- full_join(users,followers_df,by=c("user_id"="user_id"))
comp <- comp %>% mutate(status=if_else(is.na(screen_name.y),"New",if_else(is.na(screen_name.x),"Lost","Current")))
new <- comp %>% filter(status=="New") %>% select(user_id,screen_name=screen_name.x,source=source.x,lang=lang.x,follow_date=cet_curr_time,status)
current <- comp %>% filter(status=="Current") %>% select(user_id,screen_name=screen_name.x,source=source.x,lang=lang.x,follow_date,status)
lost <- comp %>% filter(status=="Lost") %>% select(user_id,screen_name=screen_name.y,source=source.y,lang=lang.y,follow_date,status)
all_followers <- bind_rows(new,current,lost)
bigrquery::bq_auth(path= "/opt/syek/key.json")
billing = "1108793-EMEA-Bee-Fee Limited"
project = "bi-playground-269209"
data_set = "soccer_test"
con = dbConnect(
bigrquery::bigquery(),
project = project,
dataset = data_set,
billing = billing
)
dbWriteTable(con, "followers", all_followers, overwrite=TRUE)
